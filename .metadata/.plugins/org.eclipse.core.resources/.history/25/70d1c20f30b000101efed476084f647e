package com.demo.dao;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import com.demo.beans.Employee;

public class EmployeeDaoImpl implements EmployeeDao {

    static List<Employee> elist;

    static {
        elist = new ArrayList<>();
        elist.add(new Employee(100, "Manjiri", "Manager"));
        elist.add(new Employee(101, "Gauri", "Developer"));
        elist.add(new Employee(103, "Kanchan", "Tester"));
    }

    @Override
    public boolean save(Employee e) {
        elist.add(e);
        return true;
    }

    @Override
    public List<Employee> findAll() {
        return elist;
    }

    @Override
    public List<Employee> findAllSortedById() {
        return elist.stream()
                    .sorted(Comparator.comparingInt(Employee::getEmpid))
                    .collect(Collectors.toList());
    }

    @Override
    public Employee findById(int eid) {
        int pos = elist.indexOf(new Employee(eid));
        if (pos != -1) {
            return elist.get(pos);
        }
        return null;
    }

    @Override
    public boolean removeById(int eid) {
        return elist.remove(new Employee(eid));
    }

    @Override
    public List<Employee> findByName(String nm) {
        List<Employee> temp = elist.stream()
                                   .filter(emp -> emp.getEname().equals(nm))
                                   .collect(Collectors.toList());
        return temp.isEmpty() ? null : temp;
    }
}
